function write_flat_top_input_pulse_input_file(risetime, decaytime, holdtime, amplitude, outputfilename)

sf_filter = '''s/\([+-]\{0,1\}[0-9]*\.\{0,1\}[0-9]\{1,\}\)[eE]+\{0,1\}\(-\{0,1\}\)\([0-9]\{1,\}\)/(\1*10^\2\3)/g''';
fs = {'#!/bin/bash'};
fs = cat(1,fs,'# Input file has 3 columns separated by white space (space or tab characters only).');
fs = cat(1,fs,'LN=1');
fs = cat(1,fs,'while read -r var1 var2 var3; do');
fs = cat(1,fs,'    if [ $LN -eq 1 ]; then');
fs = cat(1,fs,['        iTime1=`sed ', sf_filter,' <<<"$var1"`']);
fs = cat(1,fs,['        iTime2=`sed ', sf_filter,' <<<"$var2"`']);
fs = cat(1,fs,['        TimeStep=`sed ', sf_filter,' <<<"$var3"`']);
fs = cat(1,fs,'    elif [ $LN -eq 2 ]; then');
fs = cat(1,fs,['        Beta=`sed ', sf_filter,' <<<"$var1"`']);
fs = cat(1,fs,['        Alpha=`sed ', sf_filter,' <<<"$var2"`']);
fs = cat(1,fs,['        DeltaZ=`sed ', sf_filter,' <<<"$var3"`']);
fs = cat(1,fs,'    fi');
fs = cat(1,fs,'    LN=`echo $LN +1 |bc -l`');
fs = cat(1,fs,'done');
fs = cat(1,fs,'echo "Start time..$iTime1" > signal_inputs');
fs = cat(1,fs,'echo "End time....$iTime2" >> signal_inputs');
fs = cat(1,fs,'echo "Time step...$TimeStep" >> signal_inputs');
fs = cat(1,fs,'echo "Alpha.......$Alpha" >> signal_inputs');
fs = cat(1,fs,'echo "Beta........$Beta" >> signal_inputs');
fs = cat(1,fs,'echo "DeltaZ......$DeltaZ" >> signal_inputs');
fs = cat(1,fs,['TRise=`sed ', sf_filter,' <<<"',num2str(risetime),'"`']);
fs = cat(1,fs,['TDecay=`sed ', sf_filter,' <<<"',num2str(decaytime),'"`']);
fs = cat(1,fs,['THold=`sed ', sf_filter,' <<<"',num2str(holdtime),'"`']);
fs = cat(1,fs,['SAmp=`sed ', sf_filter,' <<<"',num2str(amplitude),'"`']);
fs = cat(1,fs,'echo "Rise time...$TRise" >> signal_inputs');
fs = cat(1,fs,'echo "Decay time..$TDecay" >> signal_inputs');
fs = cat(1,fs,'echo "Hold time...$THold" >> signal_inputs');
fs = cat(1,fs,'echo "Amplitude...$SAmp" >> signal_inputs');

fs = cat(1,fs,'HoldStart=`echo $TRise+$THold | bc -l`');
fs = cat(1,fs,'DecayStart=`echo $TRise+$THold+$TDecay | bc -l`');
fs = cat(1,fs,'echo "Hold start...$HoldStart" >> signal_inputs');
fs = cat(1,fs,'echo "Decay start...$DecayStart" >> signal_inputs');
fs = cat(1,fs,'# setting up indicies as Bash wants ints');
% fs = cat(1,fs,'n_samples=`echo $iTime2/$TimeStep-$iTime1/$TimeStep | bc -l`');
% fs = cat(1,fs,'n_samples=`echo $iTime2-$iTime1 | bc -l`');
% fs = cat(1,fs,'n_rise=`echo $TRise/$TimeStep-$iTime1/$TimeStep | bc -l`');
fs = cat(1,fs,'n_rise=`echo $TRise/$TimeStep | bc -l`');
% fs = cat(1,fs,'n_hold=`echo $TRise/$TimeStep+$THold/$TimeStep-$iTime1/$TimeStep | bc -l`');
fs = cat(1,fs,'n_hold=`echo $n_rise+$THold/$TimeStep | bc -l`');
% fs = cat(1,fs,'n_decay=`echo $TRise/$TimeStep+$THold/$TimeStep+$TDecay/$TimeStep-$iTime1/$TimeStep | bc -l`');
fs = cat(1,fs,'n_decay=`echo $n_hold+$TDecay/$TimeStep | bc -l`');
% fs = cat(1,fs,'echo "n samples...$n_samples" >> signal_inputs');
fs = cat(1,fs,'echo "n rise...$n_rise" >> signal_inputs');
fs = cat(1,fs,'echo "n hold...$n_hold" >> signal_inputs');
fs = cat(1,fs,'echo "n decay...$n_decay" >> signal_inputs');
fs = cat(1,fs,'# convert to integers');
% fs = cat(1,fs,'n_samples=`echo "$n_samples/1" | bc`');
fs = cat(1,fs,'n_rise=`echo "$n_rise/1" | bc`');
fs = cat(1,fs,'n_hold=`echo "$n_hold/1" | bc`');
fs = cat(1,fs,'n_decay=`echo "$n_decay/1" | bc`');
% fs = cat(1,fs,'echo "n samples...$n_samples" >> signal_inputs');
fs = cat(1,fs,'echo "n rise...$n_rise" >> signal_inputs');
fs = cat(1,fs,'echo "n hold...$n_hold" >> signal_inputs');
fs = cat(1,fs,'echo "n decay...$n_decay" >> signal_inputs');

% fs = cat(1,fs,'for n in `seq 0 1 $n_samples`');
fs = cat(1,fs,'for n in `seq $iTime1 1 $iTime2`');
fs = cat(1,fs,' do');
% fs = cat(1,fs,'    ActualTime=`echo $iTime1+$n*$TimeStep | bc -l`');
% fs = cat(1,fs,'    ActualTime=`echo $n*$TimeStep | bc -l`');
fs = cat(1,fs,'    if [ $n -le $n_rise ]; then');
fs = cat(1,fs,'        Factor=`echo $n/$n_rise | bc -l`');
fs = cat(1,fs,'    elif [ $n -le $n_hold ]; then');
fs = cat(1,fs,'        Factor=1');
fs = cat(1,fs,'    elif [ $n -le $n_decay ];then');
fs = cat(1,fs,'       n_into_decay=`echo $n-$n_rise-$n_hold | bc -l`');
fs = cat(1,fs,'        n_decay_length=`echo $n_decay-$n_rise-$n_hold | bc -l`');
fs = cat(1,fs,'        Factor=`echo 1-$n_into_decay/$n_decay_length | bc -l`');
fs = cat(1,fs,'    else');
fs = cat(1,fs,'        Factor=0');
fs = cat(1,fs,'    fi');
fs = cat(1,fs,'    echo "$output" >> signal_inputs');
fs = cat(1,fs,'    output=`echo $SAmp*$Factor*$TimeStep/$DeltaZ |bc -l`');
fs = cat(1,fs,'    echo "$output"');
fs = cat(1,fs,'done');
write_out_data(fs, outputfilename)
system(['chmod +x ',outputfilename])